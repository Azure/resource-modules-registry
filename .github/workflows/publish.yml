name: 'Pull, collect and publish'

on:
  workflow_dispatch:
    inputs:
      publish:
        type: boolean
        description: 'Publish'
        required: false
        default: false

  push:
    branches:
      - mvp
    paths:
      - '.github/actions/templates/**'
      - '.github/workflows/publish.yml'
      - 'modules/**'

env:
  variablesPath: 'settings.yml'

  AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
  ARM_SUBSCRIPTION_ID: '${{ secrets.ARM_SUBSCRIPTION_ID }}'
  ARM_MGMTGROUP_ID: '${{ secrets.ARM_MGMTGROUP_ID }}'
  ARM_TENANT_ID: '${{ secrets.ARM_TENANT_ID }}'

  GitUserName: 'CARMR Bot'
  GitUserEmail: 'carmr@noreply.github.com'

jobs:
  job_publish_modules:
    name: 'Pull, collect and publish'
    # if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-20.04
    steps:
      - name: 'Pull Azure/ResourceModules'
        uses: actions/checkout@v3
        with:
          repository: 'Azure/ResourceModules'
          path: carml
      - name: 'Checkout Azure/resource-modules-registry'
        uses: actions/checkout@v3
        with:
          clean: false
          path: carmr
          token: '${{ secrets.PLATFORM_REPO_UPDATE_PAT }}'
      - name: "Let's have a look"
        shell: pwsh
        run: |
          dir env:
          pwd
          gci -recurse | select FullName
      - name: 'Publish module to private bicep registry'
        if: github.event.inputs.publish == 'true'
        uses: azure/powershell@v1
        with:
          azPSVersion: 'latest'
          inlineScript: |
            . (Join-Path $env:GITHUB_WORKSPACE 'scripts' 'Get-ModulesToPublish.ps1')
            . (Join-Path $env:GITHUB_WORKSPACE 'scripts' 'Publish-ModuleToPublicBicepRegistry.ps1')

            $functionInput = @{
              TemplateFilePath = Join-Path $env:GITHUB_WORKSPACE "${{ inputs.templateFilePath }}"
            }

            Write-Verbose "Invoke task with" -Verbose
            Write-Verbose ($functionInput | ConvertTo-Json | Out-String) -Verbose

            # Get the modified child resources
            $ModulesToPublish = Get-ModulesToPublish @functionInput -Verbose

            # Publish the modified child resources
            foreach ($ModuleToPublish in $ModulesToPublish) {
              $RelPath = (($ModuleToPublish.TemplateFilePath).Split('/modules/')[-1]).Split('/deploy.')[0]
              Write-Output "::group::$(' - [{0}] [{1}]' -f $RelPath, $ModuleToPublish.Version)"

              $functionInput = @{
                TemplateFilePath        = $ModuleToPublish.TemplateFilePath
                BicepRegistryName       = '${{ env.bicepRegistryName }}'
                BicepRegistryRgName     = '${{ env.bicepRegistryRgName }}'
                BicepRegistryRgLocation = '${{ env.bicepRegistryRgLocation }}'
                ModuleVersion           = $ModuleToPublish.Version
              }

              Write-Verbose "Invoke task with" -Verbose
              Write-Verbose ($functionInput | ConvertTo-Json | Out-String) -Verbose

              Publish-ModuleToPrivateBicepRegistry @functionInput -Verbose
            }
      - name: 'Push latest modules'
      - uses: actions/checkout@v3
      - run: |
          date > generated.txt
          git config --global user.email '${{ env.GitUserEmail }}'
          git config --global user.name '${{ env.GitUserName }}'

          git add .
          git commit -m "Push latest modules"
          git push
